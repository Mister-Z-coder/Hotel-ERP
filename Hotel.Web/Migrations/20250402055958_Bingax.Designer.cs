// <auto-generated />
using System;
using Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hotel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250402055958_Bingax")]
    partial class Bingax
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hotel.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_nais_Agent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fonction_Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieu_nais_Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationalite_Agent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomAgent")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrenomAgent")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SexeAgent")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            AgentId = 1,
                            Date_nais_Agent = new DateTime(2001, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fonction_Agent = "ADMIN",
                            Lieu_nais_Agent = "KINSHASA",
                            Nationalite_Agent = "CONGOLAISE",
                            NomAgent = "Bakatuasa",
                            PhotoPath = "Aucunephotopour l'agent",
                            PrenomAgent = "Jeremie",
                            SexeAgent = "M"
                        },
                        new
                        {
                            AgentId = 2,
                            Date_nais_Agent = new DateTime(2001, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fonction_Agent = "CAISSIER",
                            Lieu_nais_Agent = "KINSHASA",
                            Nationalite_Agent = "CONGOLAISE",
                            NomAgent = "Bankoledi",
                            PhotoPath = "Aucunephotopour l'agent",
                            PrenomAgent = "Jean",
                            SexeAgent = "M"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Aliment", b =>
                {
                    b.Property<int>("AlimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrixUnitAliment")
                        .HasColumnType("real");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("int");

                    b.Property<string>("TitreAliment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniteAliment")
                        .HasColumnType("int");

                    b.HasKey("AlimentId");

                    b.ToTable("Aliments");
                });

            modelBuilder.Entity("Hotel.Models.Boisson", b =>
                {
                    b.Property<int>("BoissonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<int>("CategorieBoissonId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrixUnitLB")
                        .HasColumnType("real");

                    b.Property<float>("PrixUnitSB")
                        .HasColumnType("real");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("int");

                    b.Property<string>("TitreBoisson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniteBoisson")
                        .HasColumnType("int");

                    b.HasKey("BoissonId");

                    b.HasIndex("BrasserieId");

                    b.HasIndex("CategorieBoissonId");

                    b.ToTable("Boissons");
                });

            modelBuilder.Entity("Hotel.Models.Brasserie", b =>
                {
                    b.Property<int>("BrasserieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreBrasserie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrasserieId");

                    b.ToTable("Brasseries");
                });

            modelBuilder.Entity("Hotel.Models.CategorieBoisson", b =>
                {
                    b.Property<int>("CategorieBoissonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreCategorieBoisson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieBoissonId");

                    b.ToTable("CategorieBoissons");
                });

            modelBuilder.Entity("Hotel.Models.Chambre", b =>
                {
                    b.Property<int>("ChambreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapaciteMaxChambre")
                        .HasColumnType("int");

                    b.Property<int>("NumeroChambre")
                        .HasColumnType("int");

                    b.Property<double>("PrixHeure")
                        .HasColumnType("float");

                    b.Property<double>("PrixNuit")
                        .HasColumnType("float");

                    b.Property<string>("StatutChambre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeChambre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChambreId");

                    b.ToTable("Chambres");
                });

            modelBuilder.Entity("Hotel.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SexeClient")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TypeClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Hotel.Models.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureCommande")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeCommande")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommandeId");

                    b.HasIndex("AgentId");

                    b.HasIndex("ClientId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("Hotel.Models.Concerner", b =>
                {
                    b.Property<int>("AlimentId")
                        .HasColumnType("int");

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteCom")
                        .HasColumnType("int");

                    b.HasKey("AlimentId", "CommandeId");

                    b.HasIndex("CommandeId");

                    b.ToTable("Concerners");
                });

            modelBuilder.Entity("Hotel.Models.Configuration", b =>
                {
                    b.Property<int>("ConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserDashboardUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConfigurationId");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("Hotel.Models.Contenir", b =>
                {
                    b.Property<int>("BoissonId")
                        .HasColumnType("int");

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteCom")
                        .HasColumnType("int");

                    b.HasKey("BoissonId", "CommandeId");

                    b.HasIndex("CommandeId");

                    b.ToTable("Contenirs");
                });

            modelBuilder.Entity("Hotel.Models.DetailsCommande", b =>
                {
                    b.Property<int>("DetailsCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureCommande")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomsAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomsClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrixUnitaire")
                        .HasColumnType("real");

                    b.Property<string>("ProduitNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("TitreTable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProduit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailsCommandeId");

                    b.ToTable("DetailsCommandes");
                });

            modelBuilder.Entity("Hotel.Models.DetailsFacture", b =>
                {
                    b.Property<int>("DetailsFactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<int>("Caissier")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datefact")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Heurefact")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numcmd")
                        .HasColumnType("int");

                    b.Property<int>("Numfact")
                        .HasColumnType("int");

                    b.Property<decimal>("PU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qte")
                        .HasColumnType("int");

                    b.Property<string>("TypeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailsFactureId");

                    b.ToTable("DetailsFactures");
                });

            modelBuilder.Entity("Hotel.Models.DetailsFactureCaution", b =>
                {
                    b.Property<int>("DetailsFactureCautionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<int>("Caissier")
                        .HasColumnType("int");

                    b.Property<string>("Chambre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datefact")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Debut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Heurefact")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numfact")
                        .HasColumnType("int");

                    b.Property<int>("Numres")
                        .HasColumnType("int");

                    b.Property<string>("TypeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailsFactureCautionId");

                    b.ToTable("DetailsFactureCautions");
                });

            modelBuilder.Entity("Hotel.Models.DetailsFactureReservation", b =>
                {
                    b.Property<int>("DetailsFactureReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<int>("Caissier")
                        .HasColumnType("int");

                    b.Property<string>("Chambre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datefact")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Debut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Heurefact")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numfact")
                        .HasColumnType("int");

                    b.Property<int>("Numres")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailsFactureReservationId");

                    b.ToTable("DetailsFactureReservations");
                });

            modelBuilder.Entity("Hotel.Models.DetailsReglement", b =>
                {
                    b.Property<int>("DetailsReglementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caisse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReglement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HeureReglement")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotifReglement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeReglement")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailsReglementId");

                    b.ToTable("DetailsReglements");
                });

            modelBuilder.Entity("Hotel.Models.Devise", b =>
                {
                    b.Property<int>("DeviseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SigleDevise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitreDevise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviseId");

                    b.ToTable("Devises");
                });

            modelBuilder.Entity("Hotel.Models.Fournir", b =>
                {
                    b.Property<int>("AlimentId")
                        .HasColumnType("int");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int");

                    b.HasKey("AlimentId", "FournisseurId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("Fournirs");
                });

            modelBuilder.Entity("Hotel.Models.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresseFournisseur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomaineActivite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFournisseur")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneFournisseur")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("FournisseurId");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitAliment", b =>
                {
                    b.Property<int>("AlimentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHisto")
                        .HasColumnType("datetime2");

                    b.Property<float>("PrixUnitAliment")
                        .HasColumnType("real");

                    b.HasKey("AlimentId", "DateHisto");

                    b.ToTable("hPrixUnitAliments");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitLBBoisson", b =>
                {
                    b.Property<int>("BoissonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHisto")
                        .HasColumnType("datetime2");

                    b.Property<float>("PrixUnitLB")
                        .HasColumnType("real");

                    b.HasKey("BoissonId", "DateHisto");

                    b.ToTable("HPrixUnitLBBoissons");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitSBBoisson", b =>
                {
                    b.Property<int>("BoissonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHisto")
                        .HasColumnType("datetime2");

                    b.Property<float>("PrixUnitSB")
                        .HasColumnType("real");

                    b.HasKey("BoissonId", "DateHisto");

                    b.ToTable("HPrixUnitSBBoissons");
                });

            modelBuilder.Entity("Hotel.Models.Inclure", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Inclures");
                });

            modelBuilder.Entity("Hotel.Models.ModeReglement", b =>
                {
                    b.Property<int>("ModeReglementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreModeReglement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeReglementId");

                    b.ToTable("ModeReglements");
                });

            modelBuilder.Entity("Hotel.Models.PosteTravail", b =>
                {
                    b.Property<int>("PosteTravailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitrePosteTravail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PosteTravailId");

                    b.ToTable("PosteTravails");
                });

            modelBuilder.Entity("Hotel.Models.Procurer", b =>
                {
                    b.Property<int>("BoissonId")
                        .HasColumnType("int");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int");

                    b.HasKey("BoissonId", "FournisseurId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("Procurers");
                });

            modelBuilder.Entity("Hotel.Models.Reglement", b =>
                {
                    b.Property<int>("ReglementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("CaisseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReglement")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HeureReglement")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModeReglementId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontantReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotifReglement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeReglementId")
                        .HasColumnType("int");

                    b.HasKey("ReglementId");

                    b.HasIndex("AgentId");

                    b.HasIndex("CaisseId");

                    b.HasIndex("DeviseId");

                    b.HasIndex("ModeReglementId");

                    b.HasIndex("TypeReglementId");

                    b.ToTable("Reglements");
                });

            modelBuilder.Entity("Hotel.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<double>("CautionReservation")
                        .HasColumnType("float");

                    b.Property<int>("ChambreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebutOccupation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFinOccupation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureDebutOccupation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureFinOccupation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureReservation")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<string>("StatutReservation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId");

                    b.HasIndex("AgentId");

                    b.HasIndex("ChambreId");

                    b.HasIndex("ResidentId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Hotel.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrixService")
                        .HasColumnType("real");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Hotel.Models.ShiftTravail", b =>
                {
                    b.Property<int>("ShiftTravailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDebutShift")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HeureDebutShift")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservationDebutShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PosteTravailId")
                        .HasColumnType("int");

                    b.HasKey("ShiftTravailId");

                    b.HasIndex("AgentId");

                    b.HasIndex("PosteTravailId");

                    b.ToTable("ShiftTravails");
                });

            modelBuilder.Entity("Hotel.Models.TableClient", b =>
                {
                    b.Property<int>("TableClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreTableClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TableClientId");

                    b.ToTable("TableClients");
                });

            modelBuilder.Entity("Hotel.Models.Taux", b =>
                {
                    b.Property<int>("TauxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTaux")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviseId")
                        .HasColumnType("int");

                    b.Property<float>("ValeurTaux")
                        .HasColumnType("real");

                    b.HasKey("TauxId");

                    b.HasIndex("DeviseId");

                    b.ToTable("Tauxes");
                });

            modelBuilder.Entity("Hotel.Models.TypeMouvement", b =>
                {
                    b.Property<int>("TypeMouvementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreTypeMouvement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeMouvementId");

                    b.ToTable("TypeMouvements");
                });

            modelBuilder.Entity("Hotel.Models.TypeReglement", b =>
                {
                    b.Property<int>("TypeReglementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitreTypeReglement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeReglementId");

                    b.ToTable("TypeReglements");
                });

            modelBuilder.Entity("Hotel.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgentId = 1,
                            Password = "$2a$12$bVC1urfmx5lSgtFRzaQy.OoMGHwQza.ZPDHI0ZjiqDig3enC0JDzC",
                            Role = "ADMIN",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AgentId = 2,
                            Password = "$2a$12$cxjNS0UFqdtGJPfPt/7DvehVPvgTxcLLAdu90ph.ut6fp5JsDJAsi",
                            Role = "CAISSIER",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Normal", b =>
                {
                    b.HasBaseType("Hotel.Models.Client");

                    b.ToTable("Normals");
                });

            modelBuilder.Entity("Hotel.Models.Resident", b =>
                {
                    b.HasBaseType("Hotel.Models.Client");

                    b.Property<string>("NumpieceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneClient")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypedocId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("Hotel.Models.CommandeTableClient", b =>
                {
                    b.HasBaseType("Hotel.Models.Commande");

                    b.Property<DateTime>("DateOccupation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureOccupation")
                        .HasColumnType("datetime2");

                    b.Property<int>("TableClientId")
                        .HasColumnType("int");

                    b.ToTable("CommandeTableClients");
                });

            modelBuilder.Entity("Hotel.Models.CommandesService", b =>
                {
                    b.HasBaseType("Hotel.Models.Commande");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.ToTable("CommandesServices");
                });

            modelBuilder.Entity("Hotel.Models.Caisse", b =>
                {
                    b.HasBaseType("Hotel.Models.PosteTravail");

                    b.Property<string>("BarCaisse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitreCaisse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Caisses");
                });

            modelBuilder.Entity("Hotel.Models.ReglementCommande", b =>
                {
                    b.HasBaseType("Hotel.Models.Reglement");

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.ToTable("ReglementCommandes");
                });

            modelBuilder.Entity("Hotel.Models.ReglementReservation", b =>
                {
                    b.HasBaseType("Hotel.Models.Reglement");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.ToTable("ReglementReservations");
                });

            modelBuilder.Entity("Hotel.Models.FinShiftTravail", b =>
                {
                    b.HasBaseType("Hotel.Models.ShiftTravail");

                    b.Property<DateTime?>("DateFinShift")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HeureFinShift")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservationFinShift")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("FinShiftTravails");
                });

            modelBuilder.Entity("Hotel.Models.Boisson", b =>
                {
                    b.HasOne("Hotel.Models.Brasserie", "Brasserie")
                        .WithMany()
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.CategorieBoisson", "CategorieBoisson")
                        .WithMany()
                        .HasForeignKey("CategorieBoissonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brasserie");

                    b.Navigation("CategorieBoisson");
                });

            modelBuilder.Entity("Hotel.Models.Commande", b =>
                {
                    b.HasOne("Hotel.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Hotel.Models.Concerner", b =>
                {
                    b.HasOne("Hotel.Models.Aliment", "Aliment")
                        .WithMany()
                        .HasForeignKey("AlimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliment");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("Hotel.Models.Contenir", b =>
                {
                    b.HasOne("Hotel.Models.Boisson", "Boisson")
                        .WithMany()
                        .HasForeignKey("BoissonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boisson");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("Hotel.Models.Fournir", b =>
                {
                    b.HasOne("Hotel.Models.Aliment", "Aliment")
                        .WithMany("Fournirs")
                        .HasForeignKey("AlimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Fournisseur", "Fournisseur")
                        .WithMany("Fournirs")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliment");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitAliment", b =>
                {
                    b.HasOne("Hotel.Models.Aliment", "Aliment")
                        .WithMany("PrixAliments")
                        .HasForeignKey("AlimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aliment");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitLBBoisson", b =>
                {
                    b.HasOne("Hotel.Models.Boisson", "Boisson")
                        .WithMany("PrixLBs")
                        .HasForeignKey("BoissonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boisson");
                });

            modelBuilder.Entity("Hotel.Models.HPrixUnitSBBoisson", b =>
                {
                    b.HasOne("Hotel.Models.Boisson", "Boisson")
                        .WithMany("PrixSBs")
                        .HasForeignKey("BoissonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boisson");
                });

            modelBuilder.Entity("Hotel.Models.Inclure", b =>
                {
                    b.HasOne("Hotel.Models.Reservation", "Reservation")
                        .WithMany("Inclures")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Service", "Service")
                        .WithMany("Inclures")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Hotel.Models.Procurer", b =>
                {
                    b.HasOne("Hotel.Models.Boisson", "Boisson")
                        .WithMany("Procurers")
                        .HasForeignKey("BoissonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Fournisseur", "Fournisseur")
                        .WithMany("Procurers")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boisson");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("Hotel.Models.Reglement", b =>
                {
                    b.HasOne("Hotel.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Caisse", "Caisse")
                        .WithMany()
                        .HasForeignKey("CaisseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Devise", "Devise")
                        .WithMany()
                        .HasForeignKey("DeviseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.ModeReglement", "ModeReglement")
                        .WithMany()
                        .HasForeignKey("ModeReglementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.TypeReglement", "TypeReglement")
                        .WithMany()
                        .HasForeignKey("TypeReglementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Caisse");

                    b.Navigation("Devise");

                    b.Navigation("ModeReglement");

                    b.Navigation("TypeReglement");
                });

            modelBuilder.Entity("Hotel.Models.Reservation", b =>
                {
                    b.HasOne("Hotel.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Chambre", "Chambre")
                        .WithMany()
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Chambre");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("Hotel.Models.ShiftTravail", b =>
                {
                    b.HasOne("Hotel.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.PosteTravail", "PosteTravail")
                        .WithMany()
                        .HasForeignKey("PosteTravailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("PosteTravail");
                });

            modelBuilder.Entity("Hotel.Models.Taux", b =>
                {
                    b.HasOne("Hotel.Models.Devise", "Devise")
                        .WithMany()
                        .HasForeignKey("DeviseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Devise");
                });

            modelBuilder.Entity("Hotel.Models.User", b =>
                {
                    b.HasOne("Hotel.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Hotel.Models.Normal", b =>
                {
                    b.HasOne("Hotel.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.Normal", "ClientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.Resident", b =>
                {
                    b.HasOne("Hotel.Models.Client", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.Resident", "ClientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.CommandeTableClient", b =>
                {
                    b.HasOne("Hotel.Models.Commande", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.CommandeTableClient", "CommandeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.CommandesService", b =>
                {
                    b.HasOne("Hotel.Models.Commande", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.CommandesService", "CommandeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.Caisse", b =>
                {
                    b.HasOne("Hotel.Models.PosteTravail", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.Caisse", "PosteTravailId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.ReglementCommande", b =>
                {
                    b.HasOne("Hotel.Models.Reglement", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.ReglementCommande", "ReglementId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.ReglementReservation", b =>
                {
                    b.HasOne("Hotel.Models.Reglement", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.ReglementReservation", "ReglementId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.FinShiftTravail", b =>
                {
                    b.HasOne("Hotel.Models.ShiftTravail", null)
                        .WithOne()
                        .HasForeignKey("Hotel.Models.FinShiftTravail", "ShiftTravailId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.Aliment", b =>
                {
                    b.Navigation("Fournirs");

                    b.Navigation("PrixAliments");
                });

            modelBuilder.Entity("Hotel.Models.Boisson", b =>
                {
                    b.Navigation("PrixLBs");

                    b.Navigation("PrixSBs");

                    b.Navigation("Procurers");
                });

            modelBuilder.Entity("Hotel.Models.Fournisseur", b =>
                {
                    b.Navigation("Fournirs");

                    b.Navigation("Procurers");
                });

            modelBuilder.Entity("Hotel.Models.Reservation", b =>
                {
                    b.Navigation("Inclures");
                });

            modelBuilder.Entity("Hotel.Models.Service", b =>
                {
                    b.Navigation("Inclures");
                });
#pragma warning restore 612, 618
        }
    }
}
